<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot name="mobile_rob_dev_sim" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="-0.00461487870734328 0.000366188243899251 0.111305202476825"
        rpy="0 0 0"/>
      <mass
        value="8.01860580709809"/>
      <inertia
        ixx="0.156639319017219"
        ixy="1.11164438093558E-09"
        ixz="-2.73458344436832E-06"
        iyy="0.170503040844609"
        iyz="-3.90039384128734E-13"
        izz="0.273984906364084"/>
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/base_link.STL"/>
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1"/>
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/base_link.STL"/>
      </geometry>
    </collision>
  </link>
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <mass
        value="0.211162907036622"/>
      <inertia
        ixx="0.000475634940966531"
        ixy="1.03328518564722E-21"
        ixz="5.23183801417296E-19"
        iyy="0.000931261531604138"
        iyz="4.20387846548917E-21"
        izz="0.000475634940966532"/>
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/left_wheel.STL"/>
      </geometry>
      <material
        name="">
        <color
          rgba="1 0.752941176470588 1 1"/>
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/left_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint
    name="left_wheel_joint"
    type="continuous">
    <origin
      xyz="0 0.25563 0.035863"
      rpy="0 0 0"/>
    <parent
      link="base_link"/>
    <child
      link="left_wheel"/>
    <axis
      xyz="0 1 0"/>
  </joint>
  <link
    name="right_wheel">
    <inertial>
      <origin
        xyz="1.11022302462516E-16 -1.38777878078145E-17 0"
        rpy="0 0 0"/>
      <mass
        value="0.211162907036622"/>
      <inertia
        ixx="0.000475634940966534"
        ixy="1.38722267285926E-22"
        ixz="6.955139226144E-19"
        iyy="0.000931261531604141"
        iyz="4.2270223968197E-21"
        izz="0.000475634940966533"/>
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/right_wheel.STL"/>
      </geometry>
      <material
        name="">
        <color
          rgba="1 0.752941176470588 1 1"/>
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://mobile_rob_dev_sim/meshes/right_wheel.STL"/>
      </geometry>
    </collision>
  </link>
  <joint
    name="right_wheel_joint"
    type="continuous">
    <origin
      xyz="0 -0.25563 0.035863"
      rpy="0 0 0"/>
    <parent
      link="base_link"/>
    <child
      link="right_wheel"/>
    <axis
      xyz="0 1 0"/>
  </joint>
    
  <transmission name="right_wheel_transmission">
  	<type>transmission_interface/SimpleTransmission</type>
  	<joint name="right_wheel_joint">
  		<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  	</joint>
  	<actuator name="right_wheel_actuator">
  		<mecanicalReduction>7</mecanicalReduction>
  		<mecanicalReduction>VelocityJointInterface</mecanicalReduction>
  	</actuator>
  </transmission>
  <transmission name="left_wheel_transmission">
  	<type>transmission_interface/SimpleTransmission</type>
  	<joint name="left_wheel_joint">
  		<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  	</joint>
  	<actuator name="left_wheel_actuator">
  		<mecanicalReduction>7</mecanicalReduction>
  		<mecanicalReduction>VelocityJointInterface</mecanicalReduction>
  	</actuator>
  </transmission>
  <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>40</updateRate>
            <legacyMode>false</legacyMode>
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <wheelSeparation>0.50</wheelSeparation>
            <wheelDiameter>0.15</wheelDiameter>
            <torque>15</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
            <publishWheelTF>false</publishWheelTF>
            <publishWheelJointState>false</publishWheelJointState>
            <rosDebugLevel>na</rosDebugLevel>
            <wheelAcceleration>0</wheelAcceleration>
            <wheelTorque>15</wheelTorque>
            <odometrySource>world</odometrySource>
            <publishOdomTF>true</publishOdomTF>
            <publishTf>1</publishTf>
        </plugin>
  </gazebo>
  
  <!--sonar front base-->
  <link name="base_sonar_front">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.03 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.03 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0"      izz="1e-6"/>
    </inertial>
  </link>

  <joint name="sonar_front_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin xyz="0.27 0 0.175" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_sonar_front"/>
  </joint>
  
  <gazebo reference="base_sonar_front">     
   <sensor type="ray" name="TeraRanger">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>50</update_rate>
      <ray>
         <scan>
            <horizontal>
               <samples>10</samples>
               <resolution>1</resolution> 
               <min_angle>-0.14835</min_angle>
               <max_angle>0.14835</max_angle>
            </horizontal>
            <vertical>
               <samples>10</samples>
               <resolution>1</resolution> 
               <min_angle>-0.14835</min_angle>
               <max_angle>0.14835</max_angle> 
            </vertical>
         </scan>
         <range>
            <min>0.01</min>
            <max>2</max>
            <resolution>0.02</resolution>
         </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
         <gaussianNoise>0.005</gaussianNoise>
         <alwaysOn>true</alwaysOn>
         <updateRate>50</updateRate>
         <topicName>sonar_front</topicName>
         <frameName>base_sonar_front</frameName>
         <!--radiation>INFRARED</radiation-->
         <radiation>ULTRASOUND</radiation>
         <fov>0.2967</fov>
      </plugin>
   </sensor>  
  </gazebo>
  
  <!--base realsense-->
  <link name="base_realsense">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.05 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0"      izz="1e-6"/>
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin xyz="0.27 0 0.195" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_realsense"/>
  </joint>
  
  <gazebo reference="base_realsense">
  <sensor name="realsense_camera" type="depth">
    <update_rate>20</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>3</far>
      </clip>
    </camera>
    <plugin name="base_realsense_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName>camera_ir</cameraName>
      <imageTopicName>/camera/color/image_raw</imageTopicName>
      <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
      <frameName>frame</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
  </gazebo>
  <!--
  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro"/>
	<sensor_d435 parent="base_link">

  </sensor_d435>
  -->
  <!--sonar back base-->
    <link name="base_sonar_back">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.03 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.03 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0"      izz="1e-6"/>
    </inertial>
  </link>

  <joint name="sonar_back_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin xyz="-0.27 0 0.175" rpy="0 0 3.14"/>
    <parent link="base_link"/>
    <child link="base_sonar_back"/>
  </joint>   
  
    <gazebo reference="base_sonar_back">     
   <sensor type="ray" name="TeraRanger">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>50</update_rate>
      <ray>
         <scan>
            <horizontal>
               <samples>10</samples>
               <resolution>1</resolution> 
               <min_angle>-0.14835</min_angle>
               <max_angle>0.14835</max_angle>
            </horizontal>
            <vertical>
               <samples>10</samples>
               <resolution>1</resolution> 
               <min_angle>-0.14835</min_angle>
               <max_angle>0.14835</max_angle> 
            </vertical>
         </scan>
         <range>
            <min>0.01</min>
            <max>2</max>
            <resolution>0.02</resolution>
         </range>
      </ray>
      <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
         <gaussianNoise>0.005</gaussianNoise>
         <alwaysOn>true</alwaysOn>
         <updateRate>50</updateRate>
         <topicName>sonar_back</topicName>
         <frameName>base_sonar_back</frameName>
         <!--radiation>INFRARED</radiation-->
         <radiation>ULTRASOUND</radiation>
         <fov>0.2967</fov>
      </plugin>
   </sensor>  
  </gazebo>
  
  <!--rplidar_base-->
    <link name="base_rplidar">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.06 0.06 0.03"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.06 0.06 0.03"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0"      izz="1e-6"/>
    </inertial>
  </link>

  <joint name="rplidar_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.245 0 0.026"/>
    <parent link="base_link"/>
    <child link="base_rplidar"/>
  </joint>  
  
  <gazebo reference="base_rplidar">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0.245 0 0.026 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> 
</robot>
